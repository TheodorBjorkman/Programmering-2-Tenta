@startuml
class TimelineMarkerHeaderGUI {
    m_TrackHash : int
    timeline : TimelineAsset <<get>>
    state : WindowState <<get>>
    m_Layer : MarkersLayer
    m_ZOrder : LayerZOrder
    + TimelineMarkerHeaderGUI(asset:TimelineAsset, state:WindowState)
    + asset : TrackAsset <<get>>
    + boundingRect : Rect <<get>>
    + locked : bool <<get>>
    + showMarkers : bool <<get>>
    + muted : bool <<get>>
    ToWindowSpace(rect:Rect) : Rect
    + Draw(markerHeaderRect:Rect, markerContentRect:Rect, state:WindowState) : void
    + Rebuild() : void
    HandleDragAndDrop() : void
    Hash() : int
    {static} DrawMarkerDrawer(data:DrawData, state:WindowState) : void
    {static} DrawMarkerDrawerHeaderBackground(data:DrawData) : void
    {static} DrawMarkerDrawerHeader(data:DrawData, state:WindowState) : void
    {static} DrawMarkerDrawerContentBackground(data:DrawData) : void
    {static} DrawLockButton(rect:Rect) : void
    {static} DrawTrackDropDownMenu(rect:Rect, state:WindowState) : void
    {static} DrawMuteButton(rect:Rect) : void
    + zOrder : LayerZOrder <<get>>
}
class DrawData <<struct>> {
    + headerRect : Rect
    + contentRect : Rect
    + trackHeaderFont : GUIStyle
    + colorTrackFont : Color
    + showLockButton : bool
    + showMuteButton : bool
}
IRowGUI <|-- TimelineMarkerHeaderGUI
ILayerable <|-- TimelineMarkerHeaderGUI
TimelineMarkerHeaderGUI +-- DrawData
@enduml
