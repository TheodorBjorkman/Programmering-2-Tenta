@startuml
class MockSourceControlProvider {
    +  <<event>> UpdatedChangeList : Action 
    +  <<event>> UpdatedSelectedChangeList : Action<IReadOnlyList<string>> 
    +  <<event>> UpdatedHistoryEntries : Action 
    +  <<event>> UpdatedConflictState : Action<bool> 
    +  <<event>> UpdatedRemoteRevisionsAvailability : Action<bool> 
    +  <<event>> UpdatedProjectStatus : Action<ProjectStatus> 
    +  <<event>> UpdatedOperationStatus : Action<bool> 
    +  <<event>> UpdatedOperationProgress : Action<IProgressInfo> 
    +  <<event>> ErrorOccurred : Action<IErrorInfo> 
    +  <<event>> ErrorCleared : Action 
    m_Changes : List<IChangeEntry>
    <<readonly>> m_History : List<IHistoryEntry>
    + MockSourceControlProvider()
    {static} SafeDelayCall(call:Action) : void
    + SetChanges(changes:List<IChangeEntry>) : void
    CloneChanges() : IReadOnlyList<IChangeEntry>
    CloneHistory() : IReadOnlyList<IHistoryEntry>
    NotifyChanges() : void
    NotifyHistory() : void
    + GetRemoteRevisionAvailability() : bool
    + GetConflictedState() : bool
    + GetProgressState() : IProgressInfo
    + GetErrorState() : IErrorInfo
    + GetProjectStatus() : ProjectStatus
    + RequestChangeList(callback:Action<IReadOnlyList<IChangeEntry>>) : void
    + RequestPublish(message:string, changes:IReadOnlyList<IChangeEntry>) : void
    + RequestHistoryEntry(revisionId:string, callback:Action<IHistoryEntry>) : void
    + RequestHistoryPage(offset:int, pageSize:int, callback:Action<IReadOnlyList<IHistoryEntry>>) : void
    + RequestHistoryCount(callback:Action<int?>) : void
    + RequestDiscard(entry:IChangeEntry) : void
    + RequestBulkDiscard(entries:IReadOnlyList<IChangeEntry>) : void
    + RequestDiffChanges(path:string) : void
    + SupportsRevert : bool <<get>> = false
    + RequestRevert(revisionId:string, files:IReadOnlyList<string>) : void
    + RequestUpdateTo(revisionId:string) : void
    + RequestRestoreTo(revisionId:string) : void
    + RequestGoBackTo(revisionId:string) : void
    + ClearError() : void
    + RequestShowConflictedDifferences(path:string) : void
    + RequestChooseMerge(path:string) : void
    + RequestChooseMine(paths:string[]) : void
    + RequestChooseRemote(paths:string[]) : void
    + RequestSync() : void
    + RequestCancelJob() : void
    + RequestTurnOnService() : void
    + ShowServicePage() : void
    + ShowLoginPage() : void
    + ShowNoSeatPage() : void
}
ISourceControlProvider <|-- MockSourceControlProvider
@enduml
